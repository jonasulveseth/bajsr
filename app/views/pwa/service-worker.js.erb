const CACHE_VERSION = '<%= Rails.application.config.assets.version %>-v1'
const CACHE_NAME = `bajsr-${CACHE_VERSION}`
const OFFLINE_URL = '<%= offline_path %>'
const PRECACHE_URLS = [
  '/',
  OFFLINE_URL,
  '<%= asset_path "application.css" %>',
  '/icon.png',
  '/icon.svg'
]

self.addEventListener('install', event => {
  event.waitUntil(
    caches.open(CACHE_NAME).then(cache => cache.addAll(PRECACHE_URLS)).then(() => self.skipWaiting())
  )
})

self.addEventListener('activate', event => {
  event.waitUntil(
    caches.keys().then(keys => Promise.all(keys.filter(key => key !== CACHE_NAME).map(key => caches.delete(key)))).then(() => self.clients.claim())
  )
})

self.addEventListener('fetch', event => {
  if (event.request.method !== 'GET') return

  event.respondWith(
    fetch(event.request).then(response => {
      const copy = response.clone()
      caches.open(CACHE_NAME).then(cache => cache.put(event.request, copy))
      return response
    }).catch(() => {
      return caches.match(event.request).then(cached => {
        if (cached) return cached
        if (event.request.destination === 'document') {
          return caches.match(OFFLINE_URL)
        }
      })
    })
  )
})
